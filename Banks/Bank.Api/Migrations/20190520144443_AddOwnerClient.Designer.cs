// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.Banks.Infrastructure.Foundation;

namespace MusicStore.Bank.Api.Migrations
{
    [DbContext(typeof(BanksDbContext))]
    [Migration("20190520144443_AddOwnerClient")]
    partial class AddOwnerClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicStore.Bank.Core.Clients.Client", b =>
                {
                    b.Property<string>("Email");

                    b.Property<decimal>("Balance");

                    b.HasKey("Email");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MusicStore.Bank.Core.Clients.TransactionsHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("TransactionId");

                    b.Property<string>("Email");

                    b.Property<bool>("IsSuccess");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("TransactionsHistory");
                });

            modelBuilder.Entity("MusicStore.Bank.Core.Clients.TransactionsHistory", b =>
                {
                    b.HasOne("MusicStore.Bank.Core.Clients.Client")
                        .WithMany()
                        .HasForeignKey("Email");
                });
#pragma warning restore 612, 618
        }
    }
}
